@page "/config/matching"

@using CatalogueScanner.Configuration;
@using CatalogueScanner.Core.Options;
@using Microsoft.Extensions.Options;

@inject IOptionsSnapshot<MatchingOptions> MatchingOptionsAccessor;
@inject IConfigurationSaver<MatchingOptions> MatchingOptionsSaver;
@inject NavigationManager NavigationManager;

<div class="matching-header-row">
    <MatH3 Class="matching-header">Matching Options</MatH3>

    <div class="matching-header-buttons">
        <MatButton OnClick="AddRule" Class="matching-add-button">Add Rule</MatButton>
        <MatButton Raised="true" Class="matching-save-button" OnClick="Save">Save</MatButton>
    </div>
</div>

<MatTable Items="matchRules" Class="match-rules-table">
    <MatTableHeader>
        <th></th>
        <th>Match Type</th>
        <th>Property</th>
        <th>Value</th>
    </MatTableHeader>

    <MatTableRow Context="matchRule">
        <CascadingValue Value="matchRule.EditContext" IsFixed="true">
            <DataAnnotationsValidator />

            <td class="actions">
                <MatTooltip Tooltip="@(matchRule.InEditMode ? "Close" : "Edit")" Context="tooltip">
                    <MatIconButton RefBack="tooltip" Icon="edit" ToggleIcon="close" @bind-Toggled="matchRule.InEditMode"></MatIconButton>
                </MatTooltip>

                <MatTooltip Tooltip="Remove" Context="tooltip">
                    <MatIconButton RefBack="tooltip" Icon="delete" @onclick="@(args => RemoveRule(matchRule))"></MatIconButton>
                </MatTooltip>
            </td>

            <td class="match-type">
                @if (matchRule.InEditMode)
                {
                    <MatSelectItem Label="Match Type" @bind-Value="matchRule.MatchType" Items="matchTypes">
                    </MatSelectItem>
                }
                else
                {
                    @matchRule.MatchType
                }
            </td>

            <td class="property">
                @if (matchRule.InEditMode)
                {
                    <MatSelectItem Label="Property" @bind-Value="matchRule.Property" Items="properties">
                    </MatSelectItem>
                }
                else
                {
                    @matchRule.Property
                }
            </td>

            <td class="value">
                @if (matchRule.InEditMode)
                {
                    <MatStringField Label="Value" @bind-Value="matchRule.Value"></MatStringField>
                    <ValidationMessage For="@(() => matchRule.Value)"></ValidationMessage>
                }
                else
                {
                    @matchRule.Value
                }
            </td>
        </CascadingValue>
    </MatTableRow>
</MatTable>
