@page "/management/cataloguescanstates"

@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Logging
@using CatalogueScanner.ConfigurationUI.Service

@inject IStringLocalizer<CatalogueScanStates> S
@inject CatalogueScanStateService CatalogueScanStateService
@inject HttpExceptionHandlingService HttpExceptionHandlingService
@inject TimeZoneService TimeZoneService

<div class="loading-spinner-container">
    <MatH3 Class="table-page-header">Catalogue Scan States</MatH3>

    <div class="date-range-row">
        <DatePicker Value="lastOperationFrom" ValueChanged="@((DateTime? minDate) => OnFromDateChanged(minDate))" Maximum="lastOperationTo" Label="Last Operation From (Local)"></DatePicker>
        <DatePicker Value="lastOperationTo" ValueChanged="@((DateTime? maxDate) => OnToDateChanged(maxDate))" Minimum="lastOperationFrom" Label="Last Operation To (Local)"></DatePicker>
    </div>

    <MatTable Items="tableData" @bind-PageSize="pageInfo.PageSize" ShowPaging="false">
        <MatTableHeader>
            <th></th>
            <th>Catalogue Type</th>
            <th>Store</th>
            <th>Catalogue ID</th>
            <th>Scan State</th>
            <th>Last operation time (local)</th>
        </MatTableHeader>

        <MatTableRow Context="scanState">
            @if (hasNoData)
            {
                <td colspan="6">No data available.</td>
            }
            else
            {
                <td class="actions">
                    <MatTooltip Tooltip="Reset" Context="tooltip">
                        <MatIconButton RefBack="tooltip" Icon="delete" @onclick="@(args => ResetScanState(scanState))"></MatIconButton>
                    </MatTooltip>
                </td>

                <td class="catalogue-type">
                    @scanState.CatalogueType
                </td>

                <td class="store">
                    @scanState.Store
                </td>

                <td class="catalogue-id">
                    @scanState.CatalogueId
                </td>

                <td class="scan-state">
                    @scanStateLabels[scanState.ScanState]
                </td>

                <td class="last-operation-time">
                    @scanState.LastOperationLocalTime.ToString("G")
                </td>
            }
        </MatTableRow>
    </MatTable>

    <MatPaginator Length="PaginatorLength" PageSize="PageSize" Page="OnPage"></MatPaginator>

    @if (loading)
    {
        <LoadingSpinner></LoadingSpinner>
    }
</div>