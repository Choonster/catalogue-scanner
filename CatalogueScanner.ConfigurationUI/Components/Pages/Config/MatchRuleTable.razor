@using CatalogueScanner.ConfigurationUI.ViewModel;
@using CatalogueScanner.Core.MatchRule;

@using static CatalogueScanner.Core.MatchRule.SinglePropertyCatalogueItemMatchRule;

@inject IDialogService DialogService;

<div>
    <MudTable Items="MatchRules" Class="match-rules-table">
        <HeaderContent>
            <MudTh></MudTh>
            <MudTh>Match Type</MudTh>
            <MudTh>Property</MudTh>
            <MudTh>Value</MudTh>
        </HeaderContent>

        <RowTemplate Context="matchRule">
            <CascadingValue Value="matchRule.EditContext" IsFixed="true">
                <DataAnnotationsValidator />

                @switch (matchRule.MatchRuleType)
                {
                    case MatchRuleType.SingleProperty:
                        {
                            var singlePropertyMatchRule = (SinglePropertyMatchRuleViewModel)matchRule;

                            <MudTd class="actions">
                                <MudTooltip Text="@(singlePropertyMatchRule.InEditMode ? "Close" : "Edit")">
                                    <MudToggleIconButton Icon="@Icons.Material.Filled.Edit"
                                                         ToggledIcon="@Icons.Material.Filled.Close"
                                                         @bind-Toggled="singlePropertyMatchRule.InEditMode">
                                    </MudToggleIconButton>
                                </MudTooltip>

                                <MudTooltip Text="Remove">
                                    <MudIconButton Icon="@Icons.Material.Filled.Delete" @onclick="@(args => RemoveRule(singlePropertyMatchRule))"></MudIconButton>
                                </MudTooltip>
                            </MudTd>

                            <MudTd class="match-type">
                                @if (singlePropertyMatchRule.InEditMode)
                                {
                                    <MudItemSelectList Label="Match Type" Variant="Variant.Filled" @bind-Value="singlePropertyMatchRule.MatchType" Items="singlePropertyMatchRule.MatchTypes">
                                    </MudItemSelectList>
                                }
                                else
                                {
                                    @singlePropertyMatchRule.MatchType
                                }
                            </MudTd>

                            <MudTd class="property">
                                @if (singlePropertyMatchRule.InEditMode)
                                {
                                    <MudItemSelectList Label="Property" Variant="Variant.Filled" @bind-Value="singlePropertyMatchRule.Property" Items="properties">
                                    </MudItemSelectList>
                                }
                                else
                                {
                                    @singlePropertyMatchRule.Property
                                }
                            </MudTd>

                            <MudTd class="value">
                                @if (singlePropertyMatchRule.InEditMode)
                                {
                                    <MudTextField Label="Value" Variant="Variant.Filled" @bind-Value="singlePropertyMatchRule.Value"></MudTextField>
                                    <ValidationMessage For="@(() => singlePropertyMatchRule.Value)"></ValidationMessage>
                                }
                                else
                                {
                                    @singlePropertyMatchRule.Value
                                }
                            </MudTd>
                        }

                        break;

                    case MatchRuleType.Compound:
                        {
                            var compoundMatchRule = (CompoundMatchRuleViewModel)matchRule;

                            <MudTd class="actions">
                                <MudTooltip Text="Edit">
                                    <MudIconButton Icon="@Icons.Material.Filled.Edit" @onclick="@(args => OpenCompoundEditDialog(compoundMatchRule))"></MudIconButton>
                                </MudTooltip>

                                <MudTooltip Text="Remove">
                                    <MudIconButton Icon="@Icons.Material.Filled.Delete" @onclick="@(args => RemoveRule(compoundMatchRule))"></MudIconButton>
                                </MudTooltip>
                            </MudTd>

                            <MudTd class="compound-children" colspan="3">
                                <MatchRuleDescription MatchRule="compoundMatchRule"></MatchRuleDescription>
                            </MudTd>
                        }

                        break;

                    default:
                        break;
                }


            </CascadingValue>
        </RowTemplate>
    </MudTable>
</div>
