@using Microsoft.Extensions.DependencyInjection
@using Microsoft.Identity.Web
@using Service

@inject ITokenAcquisition TokenAcquisition
@inject ILogger<App> Logger

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Catalogue Scanner Configuration UI</title>
    <base href="/" />
    <link href="CatalogueScanner.ConfigurationUI.styles.css" rel="stylesheet" />
    <script src="_content/MatBlazor/dist/matBlazor.js"></script>
    <link href="_content/MatBlazor/dist/matBlazor.css" rel="stylesheet" />
    <link href="css/site.css" rel="stylesheet" />
    <HeadOutlet @rendermode="InteractiveServer" />
</head>
<body class="mat">
    @*
    Pass access token to the Routes component to allow it to populate the TokenProvider in the proper scope
    https://github.com/dotnet/AspNetCore.Docs/issues/31691#issuecomment-1937358269
    *@
    <Routes AccessToken="@AccessToken" @rendermode="InteractiveServer" />

    <script src="BlazorInterop.js"></script>
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/CurrieTechnologies.Razor.Clipboard/clipboard.min.js"></script>

    <MatPortalHost @rendermode="InteractiveServer" />
    <MatToastContainer @rendermode="InteractiveServer" />
</body>
</html>

@code {
    private string? AccessToken { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var cts = new CancellationTokenSource(TimeSpan.FromSeconds(30));

        cts.Token.Register(() => Logger.LogError("Token cancelled"));

        var accessToken = await TokenAcquisition
            .GetAccessTokenForUserAsync([".default"], tokenAcquisitionOptions: new() { CancellationToken = cts.Token })
            .ConfigureAwait(true);

        AccessToken = accessToken;

        await base.OnInitializedAsync();
    }
}
